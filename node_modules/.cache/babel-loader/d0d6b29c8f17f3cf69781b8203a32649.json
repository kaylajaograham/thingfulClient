{"ast":null,"code":"import config from '../config';\nimport TokenService from './token-service.js';\nvar ThingApiService = {\n  getThings: function getThings() {\n    return fetch(\"\".concat(config.API_ENDPOINT, \"/things\"), {\n      headers: {\n        'authorization': \"basic \".concat(TokenService.getAuthToken())\n      }\n    }).then(function (res) {\n      return !res.ok ? res.json().then(function (e) {\n        return Promise.reject(e);\n      }) : res.json();\n    });\n  },\n  getThing: function getThing(thingId) {\n    return fetch(\"\".concat(config.API_ENDPOINT, \"/things/\").concat(thingId), {\n      headers: {\n        'authorization': \"basic \".concat(TokenService.getAuthToken())\n      }\n    }).then(function (res) {\n      return !res.ok ? res.json().then(function (e) {\n        return Promise.reject(e);\n      }) : res.json();\n    });\n  },\n  getThingReviews: function getThingReviews(thingId) {\n    return fetch(\"\".concat(config.API_ENDPOINT, \"/things/\").concat(thingId, \"/reviews\"), {\n      headers: {\n        'authorization': \"basic \".concat(TokenService.getAuthToken())\n      }\n    }).then(function (res) {\n      return !res.ok ? res.json().then(function (e) {\n        return Promise.reject(e);\n      }) : res.json();\n    });\n  },\n  postReview: function postReview(thingId, text, rating) {\n    return fetch(\"\".concat(config.API_ENDPOINT, \"/reviews\"), {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': \"basic \".concat(TokenService.getAuthToken())\n      },\n      body: JSON.stringify({\n        thing_id: thingId,\n        rating: rating,\n        text: text\n      })\n    }).then(function (res) {\n      return !res.ok ? res.json().then(function (e) {\n        return Promise.reject(e);\n      }) : res.json();\n    });\n  }\n};\nexport default ThingApiService;","map":{"version":3,"sources":["/Users/kaylajaograham/Desktop/Thinkful/thingful-client/src/services/thing-api-service.js"],"names":["config","TokenService","ThingApiService","getThings","fetch","API_ENDPOINT","headers","getAuthToken","then","res","ok","json","e","Promise","reject","getThing","thingId","getThingReviews","postReview","text","rating","method","body","JSON","stringify","thing_id"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,SADsB,uBACV;AACV,WAAOC,KAAK,WAAIJ,MAAM,CAACK,YAAX,cAAkC;AAC5CC,MAAAA,OAAO,EAAE;AACP,yCAA0BL,YAAY,CAACM,YAAb,EAA1B;AADO;AADmC,KAAlC,CAAL,CAKJC,IALI,CAKC,UAAAC,GAAG;AAAA,aACN,CAACA,GAAG,CAACC,EAAN,GACID,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAAAI,CAAC;AAAA,eAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAJ;AAAA,OAAjB,CADJ,GAEIH,GAAG,CAACE,IAAJ,EAHG;AAAA,KALJ,CAAP;AAUD,GAZqB;AAatBI,EAAAA,QAbsB,oBAabC,OAba,EAaJ;AAChB,WAAOZ,KAAK,WAAIJ,MAAM,CAACK,YAAX,qBAAkCW,OAAlC,GAA6C;AACvDV,MAAAA,OAAO,EAAE;AACP,yCAA0BL,YAAY,CAACM,YAAb,EAA1B;AADO;AAD8C,KAA7C,CAAL,CAKJC,IALI,CAKC,UAAAC,GAAG;AAAA,aACN,CAACA,GAAG,CAACC,EAAN,GACID,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAAAI,CAAC;AAAA,eAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAJ;AAAA,OAAjB,CADJ,GAEIH,GAAG,CAACE,IAAJ,EAHG;AAAA,KALJ,CAAP;AAUD,GAxBqB;AAyBtBM,EAAAA,eAzBsB,2BAyBND,OAzBM,EAyBG;AACvB,WAAOZ,KAAK,WAAIJ,MAAM,CAACK,YAAX,qBAAkCW,OAAlC,eAAqD;AAC/DV,MAAAA,OAAO,EAAE;AACP,yCAA0BL,YAAY,CAACM,YAAb,EAA1B;AADO;AADsD,KAArD,CAAL,CAKJC,IALI,CAKC,UAAAC,GAAG;AAAA,aACN,CAACA,GAAG,CAACC,EAAN,GACID,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAAAI,CAAC;AAAA,eAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAJ;AAAA,OAAjB,CADJ,GAEIH,GAAG,CAACE,IAAJ,EAHG;AAAA,KALJ,CAAP;AAUD,GApCqB;AAqCtBO,EAAAA,UArCsB,sBAqCXF,OArCW,EAqCFG,IArCE,EAqCIC,MArCJ,EAqCY;AAChC,WAAOhB,KAAK,WAAIJ,MAAM,CAACK,YAAX,eAAmC;AAC7CgB,MAAAA,MAAM,EAAE,MADqC;AAE7Cf,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yCAA0BL,YAAY,CAACM,YAAb,EAA1B;AAFO,OAFoC;AAM7Ce,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,QAAQ,EAAET,OADS;AAEnBI,QAAAA,MAAM,EAANA,MAFmB;AAGnBD,QAAAA,IAAI,EAAJA;AAHmB,OAAf;AANuC,KAAnC,CAAL,CAYJX,IAZI,CAYC,UAAAC,GAAG;AAAA,aACN,CAACA,GAAG,CAACC,EAAN,GACID,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAAAI,CAAC;AAAA,eAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAJ;AAAA,OAAjB,CADJ,GAEIH,GAAG,CAACE,IAAJ,EAHG;AAAA,KAZJ,CAAP;AAiBD;AAvDqB,CAAxB;AA0DA,eAAeT,eAAf","sourcesContent":["import config from '../config'\nimport TokenService from './token-service.js'\n\nconst ThingApiService = {\n  getThings() {\n    return fetch(`${config.API_ENDPOINT}/things`, {\n      headers: {\n        'authorization': `basic ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  getThing(thingId) {\n    return fetch(`${config.API_ENDPOINT}/things/${thingId}`, {\n      headers: {\n        'authorization': `basic ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  getThingReviews(thingId) {\n    return fetch(`${config.API_ENDPOINT}/things/${thingId}/reviews`, {\n      headers: {\n        'authorization': `basic ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  postReview(thingId, text, rating) {\n    return fetch(`${config.API_ENDPOINT}/reviews`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `basic ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify({\n        thing_id: thingId,\n        rating,\n        text,\n      }),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  }\n}\n\nexport default ThingApiService\n"]},"metadata":{},"sourceType":"module"}